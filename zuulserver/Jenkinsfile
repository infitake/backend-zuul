
pipeline {
    agent any

	tools {
        maven 'mvn'
        jdk 'jdk11'
    }

    environment { 
        registry = "sanjeev00/myecr" 
        registryCredential = 'dockerhub_id' 
        dockerImage = '' 
        BRANCH_NAME = env.GIT_BRANCH.replace('origin/', '')
    }

    stages {
	stage('compile')
	{
	   steps{
		   echo 'compiling zuulserver'
           echo env.GIT_BRANCH
	       sh '''cd Services/zuulserver 
		   mvn compile'''	
	}
	}
	
	stage('test')
	{
		steps{
			sh '''
			cd Services/zuulserver 
			mvn install

			'''
		}
	}


	stage('install') {
		steps {
			sh '''cd Services/zuulserver 
				mvn install'''	
		}
	}

	stage('SonarQube Analysis')
	{
		steps{
			withSonarQubeEnv('sonarqube') {
				sh '''
				cd Services/zuulserver 
				mvn sonar:sonar
				'''
			}
		}
	}


    stage('Building our image') { 
        when {
                anyOf {
                    branch 'master';
                    branch 'dev';                    
                }
        }    
        steps { 
                script { 
                    dir('Services/zuulserver') {
                    dockerImage = docker.build(registry)
                    }
                }
            } 
        }



	stage('deploy image') {
         when {
                anyOf {
                    branch 'master';
                    branch 'dev';
                }
        }    
		steps {
        	script { 
                    docker.withRegistry( '', registryCredential ) { 
                        dockerImage.push() 
                    }
                } 
		}
	}


    }
}